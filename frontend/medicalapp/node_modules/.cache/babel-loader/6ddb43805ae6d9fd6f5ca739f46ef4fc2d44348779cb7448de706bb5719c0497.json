{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medical\\\\ReactMedical\\\\medicalapp\\\\src\\\\pages\\\\Autocomplete.js\";\nimport React, { Component } from 'react';\nimport \"../Components/css/style.css\";\nimport APIHandler from '../utils/APIHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Autocomplete extends Component {\n  constructor(props) {}\n  async loadMedicineData(event) {\n    var apiHandler = new APIHandler();\n    var dataResponse = await apiHandler.fetchAllMedicineByName(event.target.value);\n    this.setState({\n      dataList: dataResponse.data\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        className: \"form-control\",\n        placeholder: \"Medicine Name \",\n        autoComplete: \"none\",\n        onFocus: this.onFocusChange,\n        onBlur: this.onBlurChange,\n        onChange: this.loadMedicineData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.state.onFocus == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.dataList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","APIHandler","jsxDEV","_jsxDEV","Autocomplete","constructor","props","loadMedicineData","event","apiHandler","dataResponse","fetchAllMedicineByName","target","value","setState","dataList","data","render","Fragment","children","type","id","name","className","placeholder","autoComplete","onFocus","onFocusChange","onBlur","onBlurChange","onChange","fileName","_jsxFileName","lineNumber","columnNumber","state","map","item","index"],"sources":["D:/Medical/ReactMedical/medicalapp/src/pages/Autocomplete.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport \"../Components/css/style.css\"\r\nimport APIHandler from '../utils/APIHandler'\r\n\r\nexport default class Autocomplete extends Component {\r\n\r\n    constructor(props){\r\n        \r\n    }\r\n\r\n    state={\r\n        onFocus:false,\r\n        dataList:[],\r\n\r\n    }\r\n\r\n    onFocusChange=()=>{\r\n        this.setState({onFocus:true})\r\n    }\r\n    onBlurChange=()=>{\r\n        this.setState({onFocus:false})\r\n    }\r\n\r\n    async loadMedicineData(event){\r\n        var apiHandler = new APIHandler()\r\n        var dataResponse = await apiHandler.fetchAllMedicineByName(event.target.value)\r\n        this.setState({dataList:dataResponse.data})\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            className=\"form-control\"\r\n            placeholder=\"Medicine Name \"\r\n            autoComplete=\"none\"\r\n            onFocus={this.onFocusChange}\r\n            onBlur={this.onBlurChange}\r\n            onChange={this.loadMedicineData}\r\n        />\r\n         {this.state.onFocus == true ?\r\n           <div>\r\n            <ul>{this.state.dataList.map((item, index)=>(\r\n                <li>{item.name}</li>\r\n                ))}\r\n               \r\n            </ul>\r\n        </div>\r\n        :\"\"}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,6BAA6B;AACpC,OAAOC,UAAU,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,MAAMC,YAAY,SAASJ,SAAS,CAAC;EAEhDK,WAAWA,CAACC,KAAK,EAAC,CAElB;EAeA,MAAMC,gBAAgBA,CAACC,KAAK,EAAC;IACzB,IAAIC,UAAU,GAAG,IAAIR,UAAU,CAAC,CAAC;IACjC,IAAIS,YAAY,GAAG,MAAMD,UAAU,CAACE,sBAAsB,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;IAC9E,IAAI,CAACC,QAAQ,CAAC;MAACC,QAAQ,EAACL,YAAY,CAACM;IAAI,CAAC,CAAC;EAC/C;EAEFC,MAAMA,CAAA,EAAG;IACP,oBACEd,OAAA,CAACJ,KAAK,CAACmB,QAAQ;MAAAC,QAAA,gBACbhB,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAC,cAAc;QACxBC,WAAW,EAAC,gBAAgB;QAC5BC,YAAY,EAAC,MAAM;QACnBC,OAAO,EAAE,IAAI,CAACC,aAAc;QAC5BC,MAAM,EAAE,IAAI,CAACC,YAAa;QAC1BC,QAAQ,EAAE,IAAI,CAACvB;MAAiB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EACA,IAAI,CAACC,KAAK,CAACT,OAAO,IAAI,IAAI,gBACzBvB,OAAA;QAAAgB,QAAA,eACChB,OAAA;UAAAgB,QAAA,EAAK,IAAI,CAACgB,KAAK,CAACpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrCnC,OAAA;YAAAgB,QAAA,EAAKkB,IAAI,CAACf;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,GACL,EAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC;EAErB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}