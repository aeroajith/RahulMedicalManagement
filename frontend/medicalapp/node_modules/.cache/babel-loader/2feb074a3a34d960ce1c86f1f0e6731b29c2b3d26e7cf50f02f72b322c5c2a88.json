{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medical\\\\ReactMedical\\\\medicalapp\\\\src\\\\utils\\\\PrivateRouteNew.js\";\nimport React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport AuthHandler from \"./AuthHandler\";\nimport MainComponent from \"../Components/MainComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PrivateRouteNew = _ref => {\n  let {\n    activepage,\n    page\n  } = _ref;\n  return AuthHandler.loggedIn() ? /*#__PURE__*/_jsxDEV(MainComponent, {\n    page: page,\n    activepage: activepage,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 8\n  }, this);\n};\n_c = PrivateRouteNew;\nconst PrivateRoute = _ref2 => {\n  let {\n    component: Component,\n    handleLogout,\n    isAuthenticated,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated === true ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n_c2 = PrivateRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRouteNew\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Route","Routes","AuthHandler","MainComponent","jsxDEV","_jsxDEV","PrivateRouteNew","_ref","activepage","page","loggedIn","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","PrivateRoute","_ref2","component","Component","handleLogout","isAuthenticated","rest","render","Redirect","_c2","$RefreshReg$"],"sources":["D:/Medical/ReactMedical/medicalapp/src/utils/PrivateRouteNew.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport AuthHandler from \"./AuthHandler\";\r\nimport MainComponent from \"../Components/MainComponent\";\r\n\r\nexport var PrivateRouteNew  = ({activepage,page})  => {\r\n \r\n  return  AuthHandler.loggedIn() ? (\r\n      <MainComponent page ={page} activepage={activepage} {...props} />) :\r\n      (<Navigate to=\"/\" />)\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, handleLogout, isAuthenticated, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n      isAuthenticated === true\r\n      ? <Component {...props} handleLogout={handleLogout} />\r\n      : <Redirect to=\"/Login\"/>\r\n  )} />\r\n);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,IAAIC,eAAe,GAAIC,IAAA,IAAwB;EAAA,IAAvB;IAACC,UAAU;IAACC;EAAI,CAAC,GAAAF,IAAA;EAE9C,OAAQL,WAAW,CAACQ,QAAQ,CAAC,CAAC,gBAC1BL,OAAA,CAACF,aAAa;IAACM,IAAI,EAAGA,IAAK;IAACD,UAAU,EAAEA,UAAW;IAAA,GAAKG;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAChEV,OAAA,CAACN,QAAQ;IAACiB,EAAE,EAAC;EAAG;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAE;AAC3B,CAAC;AAAAE,EAAA,GALUX,eAAe;AAO1B,MAAMY,YAAY,GAAGC,KAAA;EAAA,IAAC;IAAEC,SAAS,EAAEC,SAAS;IAAEC,YAAY;IAAEC,eAAe;IAAE,GAAGC;EAAK,CAAC,GAAAL,KAAA;EAAA,oBACpFd,OAAA,CAACL,KAAK;IAAA,GAAKwB,IAAI;IAAEC,MAAM,EAAGd,KAAK,IAC3BY,eAAe,KAAK,IAAI,gBACtBlB,OAAA,CAACgB,SAAS;MAAA,GAAKV,KAAK;MAAEW,YAAY,EAAEA;IAAa;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBACpDV,OAAA,CAACqB,QAAQ;MAACV,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA,CACN;AAACY,GAAA,GANIT,YAAY;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}